//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Input/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""295f167f-e72a-4574-9961-9ce0a46c901c"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""6eef1af3-9644-45d8-b64b-96f1174543dc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""addf5bf8-b9ef-421b-b9e7-c7c92c310032"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""4f6e93ab-18ec-4b25-aa8b-f5a2142831e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""79098d8d-91b5-4a0d-8668-e4ce7c1cc93e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""eed8ec07-10ff-4693-b0a6-65765608ab3f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""98f9f934-d238-422f-95a6-8d12ac0a77fb"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""db7fda82-c0ef-49a0-8fae-fea2f38b6b48"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d085119c-9abc-45e4-8d0e-eb86b348a972"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f39d7b2e-f9f2-4e1d-b2f4-74169159b438"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3164a41d-db1b-4fd6-be94-016ddd5f863c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a79cc010-cd81-4213-af03-fcbcd0f5b82e"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""InvertVector2(invertX=false)"",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5f95f94-b6a6-454e-832b-172f85f41a3c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b114a5e1-3c34-4b99-b90a-ee858da24c1a"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b749b9e8-6109-49fa-b803-4d2349946602"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CardManagement"",
            ""id"": ""266586db-63f7-41ca-b820-2a99a1102079"",
            ""actions"": [
                {
                    ""name"": ""CardSlot1"",
                    ""type"": ""Button"",
                    ""id"": ""d792e7c7-e822-42cf-98b2-8e35af45cdcb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CardSlot2"",
                    ""type"": ""Button"",
                    ""id"": ""79c4d8e4-a4a4-4504-9c9a-d667cafcdd18"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CardSlot3"",
                    ""type"": ""Button"",
                    ""id"": ""4313a361-a712-4b2c-926d-a3230f1046a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CardSlot4"",
                    ""type"": ""Button"",
                    ""id"": ""e2bf7fe1-7295-4fa1-a135-d39c495bf50b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CardSlot5"",
                    ""type"": ""Button"",
                    ""id"": ""f5143f21-7e27-4556-a2e9-3314c3810fc2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BuyCard"",
                    ""type"": ""Button"",
                    ""id"": ""f3483ed9-fd06-4275-8b3e-c1ff2343f8a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""634af19c-7c5a-4e30-a1be-ae7bbb263fe0"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""CardSlot1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50462308-6442-4bbf-87b5-592749c4404c"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""CardSlot2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ddec207-16b5-45e3-8dec-aec63cadb7b2"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""CardSlot3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bedcc305-c1fb-4aa7-a1bf-a48c71d14c0c"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""CardSlot4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01e800f3-3775-427f-9972-d7066e25c4a7"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""CardSlot5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""230c430a-43ca-41d0-ba77-5f0509da408f"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""BuyCard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""MouseAndKeyboard"",
            ""bindingGroup"": ""MouseAndKeyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        m_Player_Fire = m_Player.FindAction("Fire", throwIfNotFound: true);
        m_Player_Reload = m_Player.FindAction("Reload", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        // CardManagement
        m_CardManagement = asset.FindActionMap("CardManagement", throwIfNotFound: true);
        m_CardManagement_CardSlot1 = m_CardManagement.FindAction("CardSlot1", throwIfNotFound: true);
        m_CardManagement_CardSlot2 = m_CardManagement.FindAction("CardSlot2", throwIfNotFound: true);
        m_CardManagement_CardSlot3 = m_CardManagement.FindAction("CardSlot3", throwIfNotFound: true);
        m_CardManagement_CardSlot4 = m_CardManagement.FindAction("CardSlot4", throwIfNotFound: true);
        m_CardManagement_CardSlot5 = m_CardManagement.FindAction("CardSlot5", throwIfNotFound: true);
        m_CardManagement_BuyCard = m_CardManagement.FindAction("BuyCard", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Look;
    private readonly InputAction m_Player_Fire;
    private readonly InputAction m_Player_Reload;
    private readonly InputAction m_Player_Jump;
    public struct PlayerActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputAction @Fire => m_Wrapper.m_Player_Fire;
        public InputAction @Reload => m_Wrapper.m_Player_Reload;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Look.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Fire.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFire;
                @Fire.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFire;
                @Fire.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFire;
                @Reload.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnReload;
                @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Fire.started += instance.OnFire;
                @Fire.performed += instance.OnFire;
                @Fire.canceled += instance.OnFire;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // CardManagement
    private readonly InputActionMap m_CardManagement;
    private ICardManagementActions m_CardManagementActionsCallbackInterface;
    private readonly InputAction m_CardManagement_CardSlot1;
    private readonly InputAction m_CardManagement_CardSlot2;
    private readonly InputAction m_CardManagement_CardSlot3;
    private readonly InputAction m_CardManagement_CardSlot4;
    private readonly InputAction m_CardManagement_CardSlot5;
    private readonly InputAction m_CardManagement_BuyCard;
    public struct CardManagementActions
    {
        private @PlayerControls m_Wrapper;
        public CardManagementActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @CardSlot1 => m_Wrapper.m_CardManagement_CardSlot1;
        public InputAction @CardSlot2 => m_Wrapper.m_CardManagement_CardSlot2;
        public InputAction @CardSlot3 => m_Wrapper.m_CardManagement_CardSlot3;
        public InputAction @CardSlot4 => m_Wrapper.m_CardManagement_CardSlot4;
        public InputAction @CardSlot5 => m_Wrapper.m_CardManagement_CardSlot5;
        public InputAction @BuyCard => m_Wrapper.m_CardManagement_BuyCard;
        public InputActionMap Get() { return m_Wrapper.m_CardManagement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CardManagementActions set) { return set.Get(); }
        public void SetCallbacks(ICardManagementActions instance)
        {
            if (m_Wrapper.m_CardManagementActionsCallbackInterface != null)
            {
                @CardSlot1.started -= m_Wrapper.m_CardManagementActionsCallbackInterface.OnCardSlot1;
                @CardSlot1.performed -= m_Wrapper.m_CardManagementActionsCallbackInterface.OnCardSlot1;
                @CardSlot1.canceled -= m_Wrapper.m_CardManagementActionsCallbackInterface.OnCardSlot1;
                @CardSlot2.started -= m_Wrapper.m_CardManagementActionsCallbackInterface.OnCardSlot2;
                @CardSlot2.performed -= m_Wrapper.m_CardManagementActionsCallbackInterface.OnCardSlot2;
                @CardSlot2.canceled -= m_Wrapper.m_CardManagementActionsCallbackInterface.OnCardSlot2;
                @CardSlot3.started -= m_Wrapper.m_CardManagementActionsCallbackInterface.OnCardSlot3;
                @CardSlot3.performed -= m_Wrapper.m_CardManagementActionsCallbackInterface.OnCardSlot3;
                @CardSlot3.canceled -= m_Wrapper.m_CardManagementActionsCallbackInterface.OnCardSlot3;
                @CardSlot4.started -= m_Wrapper.m_CardManagementActionsCallbackInterface.OnCardSlot4;
                @CardSlot4.performed -= m_Wrapper.m_CardManagementActionsCallbackInterface.OnCardSlot4;
                @CardSlot4.canceled -= m_Wrapper.m_CardManagementActionsCallbackInterface.OnCardSlot4;
                @CardSlot5.started -= m_Wrapper.m_CardManagementActionsCallbackInterface.OnCardSlot5;
                @CardSlot5.performed -= m_Wrapper.m_CardManagementActionsCallbackInterface.OnCardSlot5;
                @CardSlot5.canceled -= m_Wrapper.m_CardManagementActionsCallbackInterface.OnCardSlot5;
                @BuyCard.started -= m_Wrapper.m_CardManagementActionsCallbackInterface.OnBuyCard;
                @BuyCard.performed -= m_Wrapper.m_CardManagementActionsCallbackInterface.OnBuyCard;
                @BuyCard.canceled -= m_Wrapper.m_CardManagementActionsCallbackInterface.OnBuyCard;
            }
            m_Wrapper.m_CardManagementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CardSlot1.started += instance.OnCardSlot1;
                @CardSlot1.performed += instance.OnCardSlot1;
                @CardSlot1.canceled += instance.OnCardSlot1;
                @CardSlot2.started += instance.OnCardSlot2;
                @CardSlot2.performed += instance.OnCardSlot2;
                @CardSlot2.canceled += instance.OnCardSlot2;
                @CardSlot3.started += instance.OnCardSlot3;
                @CardSlot3.performed += instance.OnCardSlot3;
                @CardSlot3.canceled += instance.OnCardSlot3;
                @CardSlot4.started += instance.OnCardSlot4;
                @CardSlot4.performed += instance.OnCardSlot4;
                @CardSlot4.canceled += instance.OnCardSlot4;
                @CardSlot5.started += instance.OnCardSlot5;
                @CardSlot5.performed += instance.OnCardSlot5;
                @CardSlot5.canceled += instance.OnCardSlot5;
                @BuyCard.started += instance.OnBuyCard;
                @BuyCard.performed += instance.OnBuyCard;
                @BuyCard.canceled += instance.OnBuyCard;
            }
        }
    }
    public CardManagementActions @CardManagement => new CardManagementActions(this);
    private int m_MouseAndKeyboardSchemeIndex = -1;
    public InputControlScheme MouseAndKeyboardScheme
    {
        get
        {
            if (m_MouseAndKeyboardSchemeIndex == -1) m_MouseAndKeyboardSchemeIndex = asset.FindControlSchemeIndex("MouseAndKeyboard");
            return asset.controlSchemes[m_MouseAndKeyboardSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
    }
    public interface ICardManagementActions
    {
        void OnCardSlot1(InputAction.CallbackContext context);
        void OnCardSlot2(InputAction.CallbackContext context);
        void OnCardSlot3(InputAction.CallbackContext context);
        void OnCardSlot4(InputAction.CallbackContext context);
        void OnCardSlot5(InputAction.CallbackContext context);
        void OnBuyCard(InputAction.CallbackContext context);
    }
}
